// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots activitybar/Activitybar Vanilla 1`] = `
<div
  style={
    {
      "display": "flex",
      "flexDirection": "column",
      "height": 500,
      "width": 50,
    }
  }
>
  <div
    className="flex flex-col flex-grow gap-2 pt-2 pb-3 border-r-1 border-colorNeutralBorder"
    data-testid="app-activitybar_activitybar"
    style={
      {
        "backgroundColor": "var(--BV-color-app-activitybarBg)",
        "color": "var(--BV-color-app-activitybarText)",
      }
    }
  >
    <button
      aria-label="Workspace Home"
      className="text-lg font-600 h-12 min-w-12 px-3  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
      onBlur={[Function]}
      onClick={[Function]}
      onDragStart={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      onTouchCancel={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      style={
        {
          "backgroundColor": "transparent",
          "borderRadius": 0,
          "color": "var(--BV-color-app-activitybarText)",
        }
      }
      type="button"
    >
      <span>
        <svg
          className="w-7 h-7  "
          fill="currentColor"
          stroke="currentColor"
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <circle
            cx="12"
            cy="12"
            r="11"
            strokeWidth="2"
            style={
              {
                "fill": "none",
              }
            }
          />
          <text
            alignmentBaseline="central"
            strokeWidth="0"
            textAnchor="middle"
            x="50%"
            y="50%"
          >
            H
          </text>
        </svg>
      </span>
    </button>
    <div
      className="flex-grow"
    />
    <button
      aria-label="What's new"
      className="text-lg font-600 h-12 min-w-12 px-3  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
      onBlur={[Function]}
      onClick={[Function]}
      onDragStart={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      onTouchCancel={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      style={
        {
          "backgroundColor": "transparent",
          "borderRadius": 0,
          "color": "var(--BV-color-app-activitybarText)",
        }
      }
      type="button"
    >
      <span>
        <svg
          className="w-7 h-7  "
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M12 8v13m0-13V6a2 2 0 112 2h-2zm0 0V5.5A2.5 2.5 0 109.5 8H12zm-7 4h14M5 12a2 2 0 110-4h14a2 2 0 110 4M5 12v7a2 2 0 002 2h10a2 2 0 002-2v-7"
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth={2}
          />
        </svg>
      </span>
    </button>
    <button
      aria-label="options menu"
      aria-pressed={false}
      className="w-full py-3 rounded-sm flex justify-center BU_widescreen  B-ui-bangle-button_button p-1  transition-all duration-100 animate-on-press is-quiet "
      onBlur={[Function]}
      onClick={[Function]}
      onDragStart={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      onTouchCancel={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      style={
        {
          "color": "var(--BV-color-app-activitybarText)",
        }
      }
      type="button"
    >
      <svg
        className="h-7 w-7"
        fill="currentColor"
        viewBox="0 0 18 18"
        xmlns="http://www.w3.org/2000/svg"
      >
        <rect
          fill="#ff13dc"
          height="18"
          opacity="0"
          width="18"
        />
        <path
          d="M16.45,7.8965H14.8945a5.97644,5.97644,0,0,0-.921-2.2535L15.076,4.54a.55.55,0,0,0,.00219-.77781L15.076,3.76l-.8365-.836a.55.55,0,0,0-.77781-.00219L13.4595,2.924,12.357,4.0265a5.96235,5.96235,0,0,0-2.2535-.9205V1.55a.55.55,0,0,0-.55-.55H8.45a.55.55,0,0,0-.55.55V3.106a5.96235,5.96235,0,0,0-2.2535.9205l-1.1-1.1025a.55.55,0,0,0-.77781-.00219L3.7665,2.924,2.924,3.76a.55.55,0,0,0-.00219.77781L2.924,4.54,4.0265,5.643a5.97644,5.97644,0,0,0-.921,2.2535H1.55a.55.55,0,0,0-.55.55V9.55a.55.55,0,0,0,.55.55H3.1055a5.967,5.967,0,0,0,.921,2.2535L2.924,13.4595a.55.55,0,0,0-.00219.77782l.00219.00218.8365.8365a.55.55,0,0,0,.77781.00219L4.5405,15.076,5.643,13.9735a5.96235,5.96235,0,0,0,2.2535.9205V16.45a.55.55,0,0,0,.55.55H9.55a.55.55,0,0,0,.55-.55V14.894a5.96235,5.96235,0,0,0,2.2535-.9205L13.456,15.076a.55.55,0,0,0,.77782.00219L14.236,15.076l.8365-.8365a.55.55,0,0,0,.00219-.77781l-.00219-.00219L13.97,12.357a5.967,5.967,0,0,0,.921-2.2535H16.45a.55.55,0,0,0,.55-.55V8.45a.55.55,0,0,0-.54649-.55349ZM11.207,9A2.207,2.207,0,1,1,9,6.793H9A2.207,2.207,0,0,1,11.207,9Z"
        />
      </svg>
    </button>
  </div>
</div>
`;

exports[`Storyshots activitybar/Activitybar With Sidebar Item 1`] = `
<div
  style={
    {
      "display": "flex",
      "flexDirection": "column",
      "height": 500,
      "width": 50,
    }
  }
>
  <div
    className="flex flex-col flex-grow gap-2 pt-2 pb-3 border-r-1 border-colorNeutralBorder"
    data-testid="app-activitybar_activitybar"
    style={
      {
        "backgroundColor": "var(--BV-color-app-activitybarBg)",
        "color": "var(--BV-color-app-activitybarText)",
      }
    }
  >
    <button
      aria-label="Workspace Home"
      className="text-lg font-600 h-12 min-w-12 px-3  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
      onBlur={[Function]}
      onClick={[Function]}
      onDragStart={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      onTouchCancel={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      style={
        {
          "backgroundColor": "transparent",
          "borderRadius": 0,
          "color": "var(--BV-color-app-activitybarText)",
        }
      }
      type="button"
    >
      <span>
        <svg
          className="w-7 h-7  "
          fill="currentColor"
          stroke="currentColor"
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <circle
            cx="12"
            cy="12"
            r="11"
            strokeWidth="2"
            style={
              {
                "fill": "none",
              }
            }
          />
          <text
            alignmentBaseline="central"
            strokeWidth="0"
            textAnchor="middle"
            x="50%"
            y="50%"
          >
            H
          </text>
        </svg>
      </span>
    </button>
    <button
      aria-label="I am a folder sidebar"
      className="border-l-2 border-colorAppActivitybarBg  text-lg font-600 h-12 min-w-12 px-3  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
      onBlur={[Function]}
      onClick={[Function]}
      onDragStart={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      onTouchCancel={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      style={
        {
          "backgroundColor": "transparent",
          "borderRadius": 0,
          "color": "var(--BV-color-app-activitybarText)",
        }
      }
      type="button"
    >
      <span>
        <svg
          className="w-7 h-7  "
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth={2}
          />
        </svg>
      </span>
    </button>
    <div
      className="flex-grow"
    />
    <button
      aria-label="What's new"
      className="text-lg font-600 h-12 min-w-12 px-3  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
      onBlur={[Function]}
      onClick={[Function]}
      onDragStart={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      onTouchCancel={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      style={
        {
          "backgroundColor": "transparent",
          "borderRadius": 0,
          "color": "var(--BV-color-app-activitybarText)",
        }
      }
      type="button"
    >
      <span>
        <svg
          className="w-7 h-7  "
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M12 8v13m0-13V6a2 2 0 112 2h-2zm0 0V5.5A2.5 2.5 0 109.5 8H12zm-7 4h14M5 12a2 2 0 110-4h14a2 2 0 110 4M5 12v7a2 2 0 002 2h10a2 2 0 002-2v-7"
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth={2}
          />
        </svg>
      </span>
    </button>
    <button
      aria-label="options menu"
      aria-pressed={false}
      className="w-full py-3 rounded-sm flex justify-center BU_widescreen  B-ui-bangle-button_button p-1  transition-all duration-100 animate-on-press is-quiet "
      onBlur={[Function]}
      onClick={[Function]}
      onDragStart={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      onTouchCancel={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      style={
        {
          "color": "var(--BV-color-app-activitybarText)",
        }
      }
      type="button"
    >
      <svg
        className="h-7 w-7"
        fill="currentColor"
        viewBox="0 0 18 18"
        xmlns="http://www.w3.org/2000/svg"
      >
        <rect
          fill="#ff13dc"
          height="18"
          opacity="0"
          width="18"
        />
        <path
          d="M16.45,7.8965H14.8945a5.97644,5.97644,0,0,0-.921-2.2535L15.076,4.54a.55.55,0,0,0,.00219-.77781L15.076,3.76l-.8365-.836a.55.55,0,0,0-.77781-.00219L13.4595,2.924,12.357,4.0265a5.96235,5.96235,0,0,0-2.2535-.9205V1.55a.55.55,0,0,0-.55-.55H8.45a.55.55,0,0,0-.55.55V3.106a5.96235,5.96235,0,0,0-2.2535.9205l-1.1-1.1025a.55.55,0,0,0-.77781-.00219L3.7665,2.924,2.924,3.76a.55.55,0,0,0-.00219.77781L2.924,4.54,4.0265,5.643a5.97644,5.97644,0,0,0-.921,2.2535H1.55a.55.55,0,0,0-.55.55V9.55a.55.55,0,0,0,.55.55H3.1055a5.967,5.967,0,0,0,.921,2.2535L2.924,13.4595a.55.55,0,0,0-.00219.77782l.00219.00218.8365.8365a.55.55,0,0,0,.77781.00219L4.5405,15.076,5.643,13.9735a5.96235,5.96235,0,0,0,2.2535.9205V16.45a.55.55,0,0,0,.55.55H9.55a.55.55,0,0,0,.55-.55V14.894a5.96235,5.96235,0,0,0,2.2535-.9205L13.456,15.076a.55.55,0,0,0,.77782.00219L14.236,15.076l.8365-.8365a.55.55,0,0,0,.00219-.77781l-.00219-.00219L13.97,12.357a5.967,5.967,0,0,0,.921-2.2535H16.45a.55.55,0,0,0,.55-.55V8.45a.55.55,0,0,0-.54649-.55349ZM11.207,9A2.207,2.207,0,1,1,9,6.793H9A2.207,2.207,0,0,1,11.207,9Z"
        />
      </svg>
    </button>
  </div>
</div>
`;

exports[`Storyshots activitybar/ActivitybarMobile Vanilla 1`] = `
<div
  style={
    {
      "width": 400,
    }
  }
>
  <div
    className="flex flex-row px-2 items-center bg-colorAppActivitybarBg w-full select-none"
    data-testid="app-activitybar_activitybar-mobile"
  >
    <div
      className="flex flex-row items-center flex-none"
    >
      <button
        aria-label="Go home"
        className="text-sm font-600 h-8 min-w-8 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "transparent",
            "color": "var(--BV-color-neutral-text)",
          }
        }
        type="button"
      >
        <span>
          <svg
            className="w-6 h-6 w-5 h-5  "
            fill="currentColor"
            viewBox="0 0 18 18"
            xmlns="http://www.w3.org/2000/svg"
          >
            <rect
              fill="#ff13dc"
              height="18"
              opacity="0"
              width="18"
            />
            <path
              d="M6,9a.994.994,0,0,0,.2925.7045l3.9915,3.99a1,1,0,1,0,1.4355-1.386l-.0245-.0245L8.4095,9l3.286-3.285A1,1,0,0,0,10.309,4.28l-.0245.0245L6.293,8.2945A.994.994,0,0,0,6,9Z"
            />
          </svg>
        </span>
      </button>
    </div>
    <div
      className="flex flex-row items-center shrink overflow-hidden"
      role="button"
    >
      <button
        aria-label="files palette"
        className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "transparent",
            "color": "var(--BV-color-neutral-text)",
          }
        }
        type="button"
      >
        one
      </button>
    </div>
    <div
      className="flex flex-1"
    />
    <div
      className="flex flex-row items-center flex-none"
    >
      <div
        className="mr-2"
      >
        <button
          aria-label="edit"
          className="capitalize text-sm font-600 h-8 min-w-8 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-promote-solid)",
              "color": "var(--BV-color-promote-solidText)",
            }
          }
          type="button"
        >
          edit
        </button>
      </div>
      <div
        className="mr-2"
      >
        <button
          aria-label="options menu"
          aria-pressed={false}
          className="w-full py-3 rounded-sm flex justify-center  B-ui-bangle-button_button p-1  transition-all duration-100 animate-on-press is-quiet "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "color": "var(--BV-color-app-activitybarText)",
            }
          }
          type="button"
        >
          <svg
            className="h-5 w-5"
            fill="currentColor"
            viewBox="0 0 20 20"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z"
            />
          </svg>
        </button>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots activitybar/ActivitybarMobile With Long Ws Path 1`] = `
<div
  style={
    {
      "width": 400,
    }
  }
>
  <div
    className="flex flex-row px-2 items-center bg-colorAppActivitybarBg w-full select-none"
    data-testid="app-activitybar_activitybar-mobile"
  >
    <div
      className="flex flex-row items-center flex-none"
    >
      <button
        aria-label="Go home"
        className="text-sm font-600 h-8 min-w-8 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "transparent",
            "color": "var(--BV-color-neutral-text)",
          }
        }
        type="button"
      >
        <span>
          <svg
            className="w-6 h-6 w-5 h-5  "
            fill="currentColor"
            viewBox="0 0 18 18"
            xmlns="http://www.w3.org/2000/svg"
          >
            <rect
              fill="#ff13dc"
              height="18"
              opacity="0"
              width="18"
            />
            <path
              d="M6,9a.994.994,0,0,0,.2925.7045l3.9915,3.99a1,1,0,1,0,1.4355-1.386l-.0245-.0245L8.4095,9l3.286-3.285A1,1,0,0,0,10.309,4.28l-.0245.0245L6.293,8.2945A.994.994,0,0,0,6,9Z"
            />
          </svg>
        </span>
      </button>
    </div>
    <div
      className="flex flex-row items-center shrink overflow-hidden"
      role="button"
    >
      <button
        aria-label="files palette"
        className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "transparent",
            "color": "var(--BV-color-neutral-text)",
          }
        }
        type="button"
      >
        one-two-three-four-five-six-seven-eight
      </button>
    </div>
    <div
      className="flex flex-1"
    />
    <div
      className="flex flex-row items-center flex-none"
    >
      <div
        className="mr-2"
      >
        <button
          aria-label="edit"
          className="capitalize text-sm font-600 h-8 min-w-8 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-promote-solid)",
              "color": "var(--BV-color-promote-solidText)",
            }
          }
          type="button"
        >
          edit
        </button>
      </div>
      <div
        className="mr-2"
      >
        <button
          aria-label="options menu"
          aria-pressed={false}
          className="w-full py-3 rounded-sm flex justify-center  B-ui-bangle-button_button p-1  transition-all duration-100 animate-on-press is-quiet "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "color": "var(--BV-color-app-activitybarText)",
            }
          }
          type="button"
        >
          <svg
            className="h-5 w-5"
            fill="currentColor"
            viewBox="0 0 20 20"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z"
            />
          </svg>
        </button>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots app-entry/NotificationArea Main 1`] = `
<div
  style={
    {
      "width": 400,
    }
  }
>
  <div>
    <button
      className="ml-2 text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
      onBlur={[Function]}
      onClick={[Function]}
      onDragStart={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      onTouchCancel={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      style={
        {
          "backgroundColor": "var(--BV-color-neutral-solid)",
          "color": "var(--BV-color-neutral-solidText)",
        }
      }
      type="button"
    >
      Show warning
    </button>
    <button
      className="ml-2 text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
      onBlur={[Function]}
      onClick={[Function]}
      onDragStart={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      onTouchCancel={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      style={
        {
          "backgroundColor": "var(--BV-color-neutral-solid)",
          "color": "var(--BV-color-neutral-solidText)",
        }
      }
      type="button"
    >
      Show error
    </button>
    <button
      className="ml-2 text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
      onBlur={[Function]}
      onClick={[Function]}
      onDragStart={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      onTouchCancel={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      style={
        {
          "backgroundColor": "var(--BV-color-neutral-solid)",
          "color": "var(--BV-color-neutral-solidText)",
        }
      }
      type="button"
    >
      Show success
    </button>
    <div
      className="fixed bottom-0 right-0 z-50"
    />
  </div>
</div>
`;

exports[`Storyshots core-extension/PickWorkspaceType Simple Submit 1`] = `
<div>
  <button
    aria-label="open"
    className="B-ui-bangle-button_button p-1  transition-all duration-100 "
    onBlur={[Function]}
    onClick={[Function]}
    onDragStart={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchCancel={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    style={
      {
        "backgroundColor": "var(--BV-ui-bangle-button-bg-color)",
        "color": "var(--BV-ui-bangle-button-color)",
      }
    }
    type="button"
  >
    <span
      className=""
    >
      Open modal
    </span>
  </button>
  <div
    aria-hidden={null}
    data-overlay-container={true}
  />
</div>
`;

exports[`Storyshots core-extension/PickWorkspaceType Template 1`] = `
<div>
  <button
    aria-label="open"
    className="B-ui-bangle-button_button p-1  transition-all duration-100 "
    onBlur={[Function]}
    onClick={[Function]}
    onDragStart={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchCancel={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    style={
      {
        "backgroundColor": "var(--BV-ui-bangle-button-bg-color)",
        "color": "var(--BV-ui-bangle-button-color)",
      }
    }
    type="button"
  >
    <span
      className=""
    >
      Open modal
    </span>
  </button>
  <div
    aria-hidden={null}
    data-overlay-container={true}
  />
</div>
`;

exports[`Storyshots editor-container/EditorIssueComp Error 1`] = `
<div
  style={
    {
      "width": 400,
    }
  }
>
  <div
    className="relative w-full "
  >
    <div
      className="absolute inset-x-0 mx-auto rounded-md w-full flex flex-col gap-1 items-center"
    >
      <button
        aria-label="Editor encountered an issue"
        className="capitalize truncate text-sm font-600 h-8 min-w-8 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "var(--BV-color-critical-solid)",
            "color": "var(--BV-color-critical-solidText)",
          }
        }
        type="button"
      >
        <span>
          <svg
            className="w-5 h-5 w-5 h-5 mr-1  "
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth={2}
            />
          </svg>
        </span>
        This is a test
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots editor-container/EditorIssueComp Warning 1`] = `
<div
  style={
    {
      "width": 400,
    }
  }
>
  <div
    className="relative w-full "
  >
    <div
      className="absolute inset-x-0 mx-auto rounded-md w-full flex flex-col gap-1 items-center"
    >
      <button
        aria-label="Editor encountered an issue"
        className="capitalize truncate text-sm font-600 h-8 min-w-8 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "var(--BV-color-caution-solid)",
            "color": "var(--BV-color-caution-solidText)",
          }
        }
        type="button"
      >
        <span>
          <svg
            className="w-5 h-5 w-5 h-5 mr-1  "
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth={2}
            />
          </svg>
        </span>
        This is a test
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots editor-container/Editorbar Branching 1`] = `
<div
  style={
    {
      "width": 400,
    }
  }
>
  <div
    className="flex flex-row justify-between w-full px-2 py-1 lg:px-4"
    style={
      {
        "backgroundColor": "var(--BV-color-app-editorBg)",
      }
    }
  >
    <button
      aria-label="note path"
      className="text-xs font-600 min-w-6 h-6 px-1_5  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
      onBlur={[Function]}
      onClick={[Function]}
      onDragStart={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      onTouchCancel={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      style={
        {
          "backgroundColor": "var(--BV-color-neutral-borderSubdued)",
          "color": "var(--BV-color-secondary-solidText)",
        }
      }
      type="button"
    >
      one/own
    </button>
    <div
      className="flex flex-row flex-1"
    />
    <div
      className="flex flex-row"
    >
      <button
        aria-label="Close"
        className="B-ui-bangle-button_button p-1  transition-all duration-100 is-quiet "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "color": "var(--BV-ui-bangle-button-color)",
          }
        }
        type="button"
      >
        <svg
          className="fill-current  w-4 h-4 "
          style={{}}
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M6.2253 4.81108C5.83477 4.42056 5.20161 4.42056 4.81108 4.81108C4.42056 5.20161 4.42056 5.83477 4.81108 6.2253L10.5858 12L4.81114 17.7747C4.42062 18.1652 4.42062 18.7984 4.81114 19.1889C5.20167 19.5794 5.83483 19.5794 6.22535 19.1889L12 13.4142L17.7747 19.1889C18.1652 19.5794 18.7984 19.5794 19.1889 19.1889C19.5794 18.7984 19.5794 18.1652 19.1889 17.7747L13.4142 12L19.189 6.2253C19.5795 5.83477 19.5795 5.20161 19.189 4.81108C18.7985 4.42056 18.1653 4.42056 17.7748 4.81108L12 10.5858L6.2253 4.81108Z"
            fill="currentColor"
          />
        </svg>
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots editor-container/Editorbar Editing Disabled Editor 1`] = `
<div
  style={
    {
      "width": 400,
    }
  }
>
  <div
    className="flex flex-row justify-between w-full px-2 py-1 lg:px-4"
    style={
      {
        "backgroundColor": "var(--BV-color-app-editorBg)",
      }
    }
  >
    <button
      aria-label="note path"
      className="text-xs font-600 min-w-6 h-6 px-1_5  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
      onBlur={[Function]}
      onClick={[Function]}
      onDragStart={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      onTouchCancel={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      style={
        {
          "backgroundColor": "var(--BV-color-neutral-borderSubdued)",
          "color": "var(--BV-color-secondary-solidText)",
        }
      }
      type="button"
    >
      one/own
    </button>
    <button
      aria-label="enable editing"
      className="mx-2 text-xs font-600 min-w-6 h-6 px-1_5  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
      onBlur={[Function]}
      onClick={[Function]}
      onDragStart={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      onTouchCancel={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      style={
        {
          "backgroundColor": "var(--BV-color-promote-solid)",
          "color": "var(--BV-color-promote-solidText)",
        }
      }
      type="button"
    >
      Enable Editing
    </button>
    <div
      className="flex flex-row flex-1"
    />
    <div
      className="flex flex-row"
    >
      <button
        aria-label="Close"
        className="B-ui-bangle-button_button p-1  transition-all duration-100 is-quiet "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "color": "var(--BV-ui-bangle-button-color)",
          }
        }
        type="button"
      >
        <svg
          className="fill-current  w-4 h-4 "
          style={{}}
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M6.2253 4.81108C5.83477 4.42056 5.20161 4.42056 4.81108 4.81108C4.42056 5.20161 4.42056 5.83477 4.81108 6.2253L10.5858 12L4.81114 17.7747C4.42062 18.1652 4.42062 18.7984 4.81114 19.1889C5.20167 19.5794 5.83483 19.5794 6.22535 19.1889L12 13.4142L17.7747 19.1889C18.1652 19.5794 18.7984 19.5794 19.1889 19.1889C19.5794 18.7984 19.5794 18.1652 19.1889 17.7747L13.4142 12L19.189 6.2253C19.5795 5.83477 19.5795 5.20161 19.189 4.81108C18.7985 4.42056 18.1653 4.42056 17.7748 4.81108L12 10.5858L6.2253 4.81108Z"
            fill="currentColor"
          />
        </svg>
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots editor-container/Editorbar Showing Split Editor 1`] = `
<div
  style={
    {
      "width": 400,
    }
  }
>
  <div
    className="flex flex-row justify-between w-full px-2 py-1 lg:px-4"
    style={
      {
        "backgroundColor": "var(--BV-color-app-editorBg)",
      }
    }
  >
    <button
      aria-label="note path"
      className="text-xs font-600 min-w-6 h-6 px-1_5  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
      onBlur={[Function]}
      onClick={[Function]}
      onDragStart={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      onTouchCancel={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      style={
        {
          "backgroundColor": "var(--BV-color-neutral-borderSubdued)",
          "color": "var(--BV-color-secondary-solidText)",
        }
      }
      type="button"
    >
      one/own
    </button>
    <div
      className="flex flex-row flex-1"
    />
    <div
      className="flex flex-row"
    >
      <button
        aria-label="Split screen"
        className="lg:mr-1 B-ui-bangle-button_button p-1  transition-all duration-100 BU_is-active is-quiet "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "color": "var(--BV-ui-bangle-button-active-color)",
          }
        }
        type="button"
      >
        <svg
          className="w-4 h-4 "
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            clipRule="evenodd"
            d="M2 4H22V20H2V4ZM16 18V6H4V18H16Z"
            fill="currentColor"
            fillRule="evenodd"
          />
        </svg>
      </button>
      <button
        aria-label="Close"
        className="B-ui-bangle-button_button p-1  transition-all duration-100 is-quiet "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "color": "var(--BV-ui-bangle-button-color)",
          }
        }
        type="button"
      >
        <svg
          className="fill-current  w-4 h-4 "
          style={{}}
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M6.2253 4.81108C5.83477 4.42056 5.20161 4.42056 4.81108 4.81108C4.42056 5.20161 4.42056 5.83477 4.81108 6.2253L10.5858 12L4.81114 17.7747C4.42062 18.1652 4.42062 18.7984 4.81114 19.1889C5.20167 19.5794 5.83483 19.5794 6.22535 19.1889L12 13.4142L17.7747 19.1889C18.1652 19.5794 18.7984 19.5794 19.1889 19.1889C19.5794 18.7984 19.5794 18.1652 19.1889 17.7747L13.4142 12L19.189 6.2253C19.5795 5.83477 19.5795 5.20161 19.189 4.81108C18.7985 4.42056 18.1653 4.42056 17.7748 4.81108L12 10.5858L6.2253 4.81108Z"
            fill="currentColor"
          />
        </svg>
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots editor-container/Editorbar Vanilla 1`] = `
<div
  style={
    {
      "width": 400,
    }
  }
>
  <div
    className="flex flex-row justify-between w-full px-2 py-1 lg:px-4"
    style={
      {
        "backgroundColor": "var(--BV-color-app-editorBg)",
      }
    }
  >
    <button
      aria-label="note path"
      className="text-xs font-600 min-w-6 h-6 px-1_5  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
      onBlur={[Function]}
      onClick={[Function]}
      onDragStart={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      onTouchCancel={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      style={
        {
          "backgroundColor": "var(--BV-color-neutral-borderSubdued)",
          "color": "var(--BV-color-secondary-solidText)",
        }
      }
      type="button"
    >
      one
    </button>
    <div
      className="flex flex-row flex-1"
    />
    <div
      className="flex flex-row"
    >
      <button
        aria-label="Close"
        className="B-ui-bangle-button_button p-1  transition-all duration-100 is-quiet "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "color": "var(--BV-ui-bangle-button-color)",
          }
        }
        type="button"
      >
        <svg
          className="fill-current  w-4 h-4 "
          style={{}}
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M6.2253 4.81108C5.83477 4.42056 5.20161 4.42056 4.81108 4.81108C4.42056 5.20161 4.42056 5.83477 4.81108 6.2253L10.5858 12L4.81114 17.7747C4.42062 18.1652 4.42062 18.7984 4.81114 19.1889C5.20167 19.5794 5.83483 19.5794 6.22535 19.1889L12 13.4142L17.7747 19.1889C18.1652 19.5794 18.7984 19.5794 19.1889 19.1889C19.5794 18.7984 19.5794 18.1652 19.1889 17.7747L13.4142 12L19.189 6.2253C19.5795 5.83477 19.5795 5.20161 19.189 4.81108C18.7985 4.42056 18.1653 4.42056 17.7748 4.81108L12 10.5858L6.2253 4.81108Z"
            fill="currentColor"
          />
        </svg>
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots inline-backlink/BacklinkNodeButton Primary 1`] = `
<button
  aria-label="Hello"
  className="B-inline-backlink_backlink B-inline-backlink_backlinkNotFound "
  data-testid="inline-backlink-button"
  draggable={false}
  onClick={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onTouchStart={[Function]}
>
  <svg
    className="inline-block"
    stroke="currentColor"
    viewBox="0 0 18 18"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M10,5.5V1H3.5a.5.5,0,0,0-.5.5v15a.5.5,0,0,0,.5.5h11a.5.5,0,0,0,.5-.5V6H10.5A.5.5,0,0,1,10,5.5Z"
    />
    <path
      d="M11,1h.043a.5.5,0,0,1,.3535.1465l3.457,3.457A.5.5,0,0,1,15,4.957V5H11Z"
    />
  </svg>
  <span
    className="inline"
  >
    Hello
  </span>
</button>
`;

exports[`Storyshots ui-bangle-button/ActionButton Primary 1`] = `
<button
  aria-label="hi brother"
  className="B-ui-bangle-button_button p-1  transition-all duration-100 "
  onBlur={[Function]}
  onClick={[Function]}
  onDragStart={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseUp={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "backgroundColor": "var(--BV-ui-bangle-button-bg-color)",
      "color": "var(--BV-ui-bangle-button-color)",
    }
  }
  type="button"
>
  <span
    className=""
  >
    hi brothers from another mother
  </span>
</button>
`;

exports[`Storyshots ui-bangle-button/DropdownMenu Primary 1`] = `
<button
  aria-pressed={false}
  className="B-ui-bangle-button_button p-1  transition-all duration-100 "
  onBlur={[Function]}
  onClick={[Function]}
  onDragStart={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseUp={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "backgroundColor": "var(--BV-ui-bangle-button-bg-color)",
      "color": "var(--BV-ui-bangle-button-color)",
    }
  }
  type="button"
>
  <span
    className=""
  >
    wow
  </span>
</button>
`;

exports[`Storyshots ui-components/BaseButton Primary 1`] = `
<button
  className="transition-all duration-100 cursor-default  BU_is-hovered BU_is-pressed "
  style={
    {
      "transform": "scale(var(--BV-ui-bangle-button-depression))",
    }
  }
  type="button"
>
  Hello
</button>
`;

exports[`Storyshots ui-components/BaseButton Secondary 1`] = `
<button
  className="transition-all duration-100 cursor-default  "
  type="button"
>
  Hello
</button>
`;

exports[`Storyshots ui-components/Button Basic Test 1`] = `
<button
  aria-label="Hi brother"
  className="B-ui-components_button select-none py-1 px-3 BU_variant-secondary i-am-a-class  transition-all duration-100 cursor-default  "
  onBlur={[Function]}
  onClick={[Function]}
  onDragStart={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseUp={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "backgroundColor": "var(--BV-ui-bangle-button-bg-color)",
      "color": "var(--BV-ui-bangle-button-color)",
    }
  }
  type="button"
>
  Hello
</button>
`;

exports[`Storyshots ui-components/Button Destructive Button 1`] = `
<button
  aria-label="Hi brother"
  className="B-ui-components_button select-none py-1 px-3 BU_variant-destructive  transition-all duration-100 cursor-default  "
  onBlur={[Function]}
  onClick={[Function]}
  onDragStart={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseUp={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "backgroundColor": "var(--BV-ui-bangle-button-destructive-bg-color)",
      "color": "var(--BV-ui-bangle-button-destructive-color)",
    }
  }
  type="button"
>
  Hello
</button>
`;

exports[`Storyshots ui-components/Button Disabled Button 1`] = `
<button
  aria-label="Hi brother"
  className="B-ui-components_button select-none py-1 px-3 BU_variant-secondary i-am-a-class  transition-all duration-100 cursor-default  cursor-not-allowed "
  disabled={true}
  onBlur={[Function]}
  onClick={[Function]}
  onDragStart={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseUp={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "backgroundColor": "var(--BV-ui-bangle-button-disabled-bg-color)",
      "color": "var(--BV-ui-bangle-button-disabled-color)",
    }
  }
  type="button"
>
  Hello
</button>
`;

exports[`Storyshots ui-components/Button Primary Button 1`] = `
<button
  aria-label="Hi brother"
  className="B-ui-components_button select-none py-1 px-3 BU_variant-primary  transition-all duration-100 cursor-default  "
  onBlur={[Function]}
  onClick={[Function]}
  onDragStart={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseUp={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "backgroundColor": "var(--BV-ui-bangle-button-primary-bg-color)",
      "color": "var(--BV-ui-bangle-button-primary-color)",
    }
  }
  type="button"
>
  Hello
</button>
`;

exports[`Storyshots ui-components/Button Quiet Button 1`] = `
<button
  aria-label="Hi brother"
  className="B-ui-components_button select-none py-1 px-3 BU_variant-secondary  transition-all duration-100 cursor-default  "
  onBlur={[Function]}
  onClick={[Function]}
  onDragStart={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseUp={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "color": "var(--BV-ui-bangle-button-color)",
    }
  }
  type="button"
>
  Hello
</button>
`;

exports[`Storyshots ui-components/ButtonV2 Button Icons 1`] = `
<div>
  <div>
    <span>
      No text
    </span>
    <div
      className="flex flex-row gap-2"
    >
      <button
        className="text-xs font-600 min-w-6 h-6 px-1_5  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "var(--BV-color-critical-solid)",
            "color": "var(--BV-color-critical-solidText)",
          }
        }
        type="button"
      >
        <span>
          <svg
            className="w-4 h-4  "
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth={2}
            />
          </svg>
        </span>
      </button>
      <button
        className="text-sm font-600 h-8 min-w-8 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "var(--BV-color-neutral-solid)",
            "color": "var(--BV-color-neutral-solidText)",
          }
        }
        type="button"
      >
        <span>
          <svg
            className="w-5 h-5  "
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth={2}
            />
          </svg>
        </span>
      </button>
      <button
        className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "var(--BV-color-promote-solid)",
            "color": "var(--BV-color-promote-solidText)",
          }
        }
        type="button"
      >
        <span>
          <svg
            className="w-6 h-6  "
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth={2}
            />
          </svg>
        </span>
      </button>
      <button
        className="text-lg font-600 h-12 min-w-12 px-3  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "var(--BV-color-neutral-solid)",
            "color": "var(--BV-color-neutral-solidText)",
          }
        }
        type="button"
      >
        <span>
          <svg
            className="w-7 h-7  "
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth={2}
            />
          </svg>
        </span>
      </button>
    </div>
  </div>
  <div>
    <span>
      No text
    </span>
    <div
      className="flex flex-row gap-2"
    >
      <button
        className="text-xs font-600 min-w-6 h-6 px-1_5  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "transparent",
            "color": "var(--BV-color-critical-solid)",
          }
        }
        type="button"
      >
        <span>
          <svg
            className="w-4 h-4  "
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth={2}
            />
          </svg>
        </span>
      </button>
      <button
        className="text-sm font-600 h-8 min-w-8 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "transparent",
            "color": "var(--BV-color-neutral-text)",
          }
        }
        type="button"
      >
        <span>
          <svg
            className="w-5 h-5  "
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth={2}
            />
          </svg>
        </span>
      </button>
      <button
        className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "transparent",
            "color": "var(--BV-color-promote-solid)",
          }
        }
        type="button"
      >
        <span>
          <svg
            className="w-6 h-6  "
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth={2}
            />
          </svg>
        </span>
      </button>
      <button
        className="text-lg font-600 h-12 min-w-12 px-3  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "transparent",
            "color": "var(--BV-color-neutral-text)",
          }
        }
        type="button"
      >
        <span>
          <svg
            className="w-7 h-7  "
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth={2}
            />
          </svg>
        </span>
      </button>
    </div>
  </div>
  <div>
    <span>
      Left with text
    </span>
    <div
      className="flex flex-row gap-2"
    >
      <button
        className="text-xs font-600 min-w-6 h-6 px-1_5  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "var(--BV-color-critical-solid)",
            "color": "var(--BV-color-critical-solidText)",
          }
        }
        type="button"
      >
        <span>
          <svg
            className="w-4 h-4 mr-0_5  "
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth={2}
            />
          </svg>
        </span>
        XSmall
      </button>
      <button
        className="text-sm font-600 h-8 min-w-8 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "var(--BV-color-neutral-solid)",
            "color": "var(--BV-color-neutral-solidText)",
          }
        }
        type="button"
      >
        <span>
          <svg
            className="w-5 h-5 mr-1  "
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth={2}
            />
          </svg>
        </span>
        Small
      </button>
      <button
        className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "var(--BV-color-promote-solid)",
            "color": "var(--BV-color-promote-solidText)",
          }
        }
        type="button"
      >
        <span>
          <svg
            className="w-6 h-6 mr-1  "
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth={2}
            />
          </svg>
        </span>
        Medium
      </button>
      <button
        className="text-lg font-600 h-12 min-w-12 px-3  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "var(--BV-color-neutral-solid)",
            "color": "var(--BV-color-neutral-solidText)",
          }
        }
        type="button"
      >
        <span>
          <svg
            className="w-7 h-7 mr-1  "
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth={2}
            />
          </svg>
        </span>
        Large
      </button>
    </div>
  </div>
  <div>
    <span>
      right
    </span>
    <div
      className="flex flex-row gap-2"
    >
      <button
        className="text-xs font-600 min-w-6 h-6 px-1_5  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "var(--BV-color-critical-solid)",
            "color": "var(--BV-color-critical-solidText)",
          }
        }
        type="button"
      >
        XSmall
        <span>
          <svg
            className="w-4 h-4 ml-0_5  "
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth={2}
            />
          </svg>
        </span>
      </button>
      <button
        className="text-sm font-600 h-8 min-w-8 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "var(--BV-color-neutral-solid)",
            "color": "var(--BV-color-neutral-solidText)",
          }
        }
        type="button"
      >
        Small
        <span>
          <svg
            className="w-5 h-5 ml-1  "
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth={2}
            />
          </svg>
        </span>
      </button>
      <button
        className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "var(--BV-color-promote-solid)",
            "color": "var(--BV-color-promote-solidText)",
          }
        }
        type="button"
      >
        Medium
        <span>
          <svg
            className="w-6 h-6 ml-1  "
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth={2}
            />
          </svg>
        </span>
      </button>
      <button
        className="text-lg font-600 h-12 min-w-12 px-3  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "var(--BV-color-neutral-solid)",
            "color": "var(--BV-color-neutral-solidText)",
          }
        }
        type="button"
      >
        Large
        <span>
          <svg
            className="w-7 h-7 ml-1  "
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth={2}
            />
          </svg>
        </span>
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots ui-components/ButtonV2 Button Sizes 1`] = `
<div>
  <div>
    <div
      className="flex flex-row gap-2"
    >
      <button
        className="text-xs font-600 min-w-6 h-6 px-1_5  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "var(--BV-color-neutral-solid)",
            "color": "var(--BV-color-neutral-solidText)",
          }
        }
        type="button"
      >
        XSmall
      </button>
      <button
        className="text-sm font-600 h-8 min-w-8 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "var(--BV-color-neutral-solid)",
            "color": "var(--BV-color-neutral-solidText)",
          }
        }
        type="button"
      >
        Small
      </button>
      <button
        className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "var(--BV-color-neutral-solid)",
            "color": "var(--BV-color-neutral-solidText)",
          }
        }
        type="button"
      >
        Medium
      </button>
      <button
        className="text-lg font-600 h-12 min-w-12 px-3  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "var(--BV-color-neutral-solid)",
            "color": "var(--BV-color-neutral-solidText)",
          }
        }
        type="button"
      >
        Large
      </button>
    </div>
    <div
      className="mt-3"
    >
      Touch
    </div>
    <div
      className="flex flex-row gap-2"
    >
      <button
        className="text-xs font-600 min-w-6 h-7 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "var(--BV-color-neutral-solid)",
            "color": "var(--BV-color-neutral-solidText)",
          }
        }
        type="button"
      >
        XSmall
      </button>
      <button
        className="text-sm font-600 h-8 min-w-8  px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "var(--BV-color-neutral-solid)",
            "color": "var(--BV-color-neutral-solidText)",
          }
        }
        type="button"
      >
        Small
      </button>
      <button
        className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "var(--BV-color-neutral-solid)",
            "color": "var(--BV-color-neutral-solidText)",
          }
        }
        type="button"
      >
        Medium
      </button>
      <button
        className="text-lg font-600 h-12 min-w-12 px-4  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "var(--BV-color-neutral-solid)",
            "color": "var(--BV-color-neutral-solidText)",
          }
        }
        type="button"
      >
        Large
      </button>
    </div>
  </div>
  <div>
    <div
      className="flex flex-row gap-2"
    >
      <button
        className="text-xs font-600 min-w-6 h-6 px-1_5  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "transparent",
            "border": "2px solid var(--BV-color-neutral-text)",
            "color": "var(--BV-color-neutral-text)",
          }
        }
        type="button"
      >
        XSmall
      </button>
      <button
        className="text-sm font-600 h-8 min-w-8 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "transparent",
            "border": "2px solid var(--BV-color-neutral-text)",
            "color": "var(--BV-color-neutral-text)",
          }
        }
        type="button"
      >
        Small
      </button>
      <button
        className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "transparent",
            "border": "2px solid var(--BV-color-neutral-text)",
            "color": "var(--BV-color-neutral-text)",
          }
        }
        type="button"
      >
        Medium
      </button>
      <button
        className="text-lg font-600 h-12 min-w-12 px-3  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "transparent",
            "border": "2px solid var(--BV-color-neutral-text)",
            "color": "var(--BV-color-neutral-text)",
          }
        }
        type="button"
      >
        Large
      </button>
    </div>
    <div
      className="mt-3"
    >
      Touch
    </div>
    <div
      className="flex flex-row gap-2"
    >
      <button
        className="text-xs font-600 min-w-6 h-7 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "transparent",
            "border": "2px solid var(--BV-color-neutral-text)",
            "color": "var(--BV-color-neutral-text)",
          }
        }
        type="button"
      >
        XSmall
      </button>
      <button
        className="text-sm font-600 h-8 min-w-8  px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "transparent",
            "border": "2px solid var(--BV-color-neutral-text)",
            "color": "var(--BV-color-neutral-text)",
          }
        }
        type="button"
      >
        Small
      </button>
      <button
        className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "transparent",
            "border": "2px solid var(--BV-color-neutral-text)",
            "color": "var(--BV-color-neutral-text)",
          }
        }
        type="button"
      >
        Medium
      </button>
      <button
        className="text-lg font-600 h-12 min-w-12 px-4  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
        onBlur={[Function]}
        onClick={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          {
            "backgroundColor": "transparent",
            "border": "2px solid var(--BV-color-neutral-text)",
            "color": "var(--BV-color-neutral-text)",
          }
        }
        type="button"
      >
        Large
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots ui-components/ButtonV2 Button Variants 1`] = `
[
  <div
    className="text-xl font-600 mt-6"
  >
    solid
  </div>,
  <div
    className="flex flex-row gap-2"
  >
    <div>
      <div
        className="flex flex-row gap-2"
      >
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-neutral-solid)",
              "color": "var(--BV-color-neutral-solidText)",
            }
          }
          type="button"
        >
          Neutral
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-secondary-solid)",
              "color": "var(--BV-color-secondary-solidText)",
            }
          }
          type="button"
        >
          Secondary
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-caution-solid)",
              "color": "var(--BV-color-caution-solidText)",
            }
          }
          type="button"
        >
          Caution
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-critical-solid)",
              "color": "var(--BV-color-critical-solidText)",
            }
          }
          type="button"
        >
          Critical
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-positive-solid)",
              "color": "var(--BV-color-positive-solidText)",
            }
          }
          type="button"
        >
          Positive
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-promote-solid)",
              "color": "var(--BV-color-promote-solidText)",
            }
          }
          type="button"
        >
          Promote
        </button>
      </div>
    </div>
  </div>,
  <div
    className="mt-3"
  >
    <h3>
      disabled
    </h3>
    <div>
      <div
        className="flex flex-row gap-2"
      >
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-not-allowed  "
          disabled={true}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-neutral-solidFaint)",
              "color": "var(--BV-color-neutral-textDisabled)",
            }
          }
          type="button"
        >
          Neutral
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-not-allowed  "
          disabled={true}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-secondary-solidFaint)",
              "color": "var(--BV-color-neutral-textDisabled)",
            }
          }
          type="button"
        >
          Secondary
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-not-allowed  "
          disabled={true}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-caution-solidFaint)",
              "color": "var(--BV-color-neutral-textDisabled)",
            }
          }
          type="button"
        >
          Caution
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-not-allowed  "
          disabled={true}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-critical-solidFaint)",
              "color": "var(--BV-color-neutral-textDisabled)",
            }
          }
          type="button"
        >
          Critical
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-not-allowed  "
          disabled={true}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-positive-solidFaint)",
              "color": "var(--BV-color-neutral-textDisabled)",
            }
          }
          type="button"
        >
          Positive
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-not-allowed  "
          disabled={true}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-promote-solidFaint)",
              "color": "var(--BV-color-neutral-textDisabled)",
            }
          }
          type="button"
        >
          Promote
        </button>
      </div>
    </div>
  </div>,
  <div
    className="mt-3"
  >
    <h3>
      animate on press disabled
    </h3>
    <div>
      <div
        className="flex flex-row gap-2"
      >
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-colors duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-neutral-solid)",
              "color": "var(--BV-color-neutral-solidText)",
            }
          }
          type="button"
        >
          Neutral
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-colors duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-secondary-solid)",
              "color": "var(--BV-color-secondary-solidText)",
            }
          }
          type="button"
        >
          Secondary
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-colors duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-caution-solid)",
              "color": "var(--BV-color-caution-solidText)",
            }
          }
          type="button"
        >
          Caution
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-colors duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-critical-solid)",
              "color": "var(--BV-color-critical-solidText)",
            }
          }
          type="button"
        >
          Critical
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-colors duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-positive-solid)",
              "color": "var(--BV-color-positive-solidText)",
            }
          }
          type="button"
        >
          Positive
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-colors duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-promote-solid)",
              "color": "var(--BV-color-promote-solidText)",
            }
          }
          type="button"
        >
          Promote
        </button>
      </div>
    </div>
  </div>,
  <div
    className="mt-3"
  >
    <h3>
      touch
    </h3>
    <div>
      <div
        className="flex flex-row gap-2"
      >
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-neutral-solid)",
              "color": "var(--BV-color-neutral-solidText)",
            }
          }
          type="button"
        >
          Neutral
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-secondary-solid)",
              "color": "var(--BV-color-secondary-solidText)",
            }
          }
          type="button"
        >
          Secondary
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-caution-solid)",
              "color": "var(--BV-color-caution-solidText)",
            }
          }
          type="button"
        >
          Caution
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-critical-solid)",
              "color": "var(--BV-color-critical-solidText)",
            }
          }
          type="button"
        >
          Critical
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-positive-solid)",
              "color": "var(--BV-color-positive-solidText)",
            }
          }
          type="button"
        >
          Positive
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-promote-solid)",
              "color": "var(--BV-color-promote-solidText)",
            }
          }
          type="button"
        >
          Promote
        </button>
      </div>
    </div>
  </div>,
  <div
    className="mt-3"
  >
    <h3>
      leftIcon
    </h3>
    <div>
      <div
        className="flex flex-row gap-2"
      >
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-neutral-solid)",
              "color": "var(--BV-color-neutral-solidText)",
            }
          }
          type="button"
        >
          <span>
            <svg
              className="w-6 h-6 mr-1  "
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
              />
            </svg>
          </span>
          Neutral
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-secondary-solid)",
              "color": "var(--BV-color-secondary-solidText)",
            }
          }
          type="button"
        >
          <span>
            <svg
              className="w-6 h-6 mr-1  "
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
              />
            </svg>
          </span>
          Secondary
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-caution-solid)",
              "color": "var(--BV-color-caution-solidText)",
            }
          }
          type="button"
        >
          <span>
            <svg
              className="w-6 h-6 mr-1  "
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
              />
            </svg>
          </span>
          Caution
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-critical-solid)",
              "color": "var(--BV-color-critical-solidText)",
            }
          }
          type="button"
        >
          <span>
            <svg
              className="w-6 h-6 mr-1  "
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
              />
            </svg>
          </span>
          Critical
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-positive-solid)",
              "color": "var(--BV-color-positive-solidText)",
            }
          }
          type="button"
        >
          <span>
            <svg
              className="w-6 h-6 mr-1  "
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
              />
            </svg>
          </span>
          Positive
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-promote-solid)",
              "color": "var(--BV-color-promote-solidText)",
            }
          }
          type="button"
        >
          <span>
            <svg
              className="w-6 h-6 mr-1  "
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
              />
            </svg>
          </span>
          Promote
        </button>
      </div>
    </div>
  </div>,
  <div
    className="text-xl font-600 mt-6"
  >
    ghost
  </div>,
  <div
    className="flex flex-row gap-2"
  >
    <div>
      <div
        className="flex flex-row gap-2"
      >
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "border": "2px solid var(--BV-color-neutral-text)",
              "color": "var(--BV-color-neutral-text)",
            }
          }
          type="button"
        >
          Neutral
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "border": "2px solid var(--BV-color-secondary-solidText)",
              "color": "var(--BV-color-secondary-solidText)",
            }
          }
          type="button"
        >
          Secondary
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "border": "2px solid var(--BV-color-caution-solid)",
              "color": "var(--BV-color-caution-solid)",
            }
          }
          type="button"
        >
          Caution
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "border": "2px solid var(--BV-color-critical-solid)",
              "color": "var(--BV-color-critical-solid)",
            }
          }
          type="button"
        >
          Critical
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "border": "2px solid var(--BV-color-positive-solid)",
              "color": "var(--BV-color-positive-solid)",
            }
          }
          type="button"
        >
          Positive
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "border": "2px solid var(--BV-color-promote-solid)",
              "color": "var(--BV-color-promote-solid)",
            }
          }
          type="button"
        >
          Promote
        </button>
      </div>
    </div>
  </div>,
  <div
    className="mt-3"
  >
    <h3>
      disabled
    </h3>
    <div>
      <div
        className="flex flex-row gap-2"
      >
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-not-allowed  "
          disabled={true}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "border": "2px solid var(--BV-color-neutral-textDisabled)",
              "color": "var(--BV-color-neutral-textDisabled)",
            }
          }
          type="button"
        >
          Neutral
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-not-allowed  "
          disabled={true}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "border": "2px solid var(--BV-color-neutral-textDisabled)",
              "color": "var(--BV-color-neutral-textDisabled)",
            }
          }
          type="button"
        >
          Secondary
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-not-allowed  "
          disabled={true}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "border": "2px solid var(--BV-color-neutral-textDisabled)",
              "color": "var(--BV-color-neutral-textDisabled)",
            }
          }
          type="button"
        >
          Caution
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-not-allowed  "
          disabled={true}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "border": "2px solid var(--BV-color-neutral-textDisabled)",
              "color": "var(--BV-color-neutral-textDisabled)",
            }
          }
          type="button"
        >
          Critical
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-not-allowed  "
          disabled={true}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "border": "2px solid var(--BV-color-neutral-textDisabled)",
              "color": "var(--BV-color-neutral-textDisabled)",
            }
          }
          type="button"
        >
          Positive
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-not-allowed  "
          disabled={true}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "border": "2px solid var(--BV-color-neutral-textDisabled)",
              "color": "var(--BV-color-neutral-textDisabled)",
            }
          }
          type="button"
        >
          Promote
        </button>
      </div>
    </div>
  </div>,
  <div
    className="mt-3"
  >
    <h3>
      animate on press disabled
    </h3>
    <div>
      <div
        className="flex flex-row gap-2"
      >
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-colors duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "border": "2px solid var(--BV-color-neutral-text)",
              "color": "var(--BV-color-neutral-text)",
            }
          }
          type="button"
        >
          Neutral
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-colors duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "border": "2px solid var(--BV-color-secondary-solidText)",
              "color": "var(--BV-color-secondary-solidText)",
            }
          }
          type="button"
        >
          Secondary
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-colors duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "border": "2px solid var(--BV-color-caution-solid)",
              "color": "var(--BV-color-caution-solid)",
            }
          }
          type="button"
        >
          Caution
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-colors duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "border": "2px solid var(--BV-color-critical-solid)",
              "color": "var(--BV-color-critical-solid)",
            }
          }
          type="button"
        >
          Critical
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-colors duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "border": "2px solid var(--BV-color-positive-solid)",
              "color": "var(--BV-color-positive-solid)",
            }
          }
          type="button"
        >
          Positive
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-colors duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "border": "2px solid var(--BV-color-promote-solid)",
              "color": "var(--BV-color-promote-solid)",
            }
          }
          type="button"
        >
          Promote
        </button>
      </div>
    </div>
  </div>,
  <div
    className="mt-3"
  >
    <h3>
      touch
    </h3>
    <div>
      <div
        className="flex flex-row gap-2"
      >
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "border": "2px solid var(--BV-color-neutral-text)",
              "color": "var(--BV-color-neutral-text)",
            }
          }
          type="button"
        >
          Neutral
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "border": "2px solid var(--BV-color-secondary-solidText)",
              "color": "var(--BV-color-secondary-solidText)",
            }
          }
          type="button"
        >
          Secondary
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "border": "2px solid var(--BV-color-caution-solid)",
              "color": "var(--BV-color-caution-solid)",
            }
          }
          type="button"
        >
          Caution
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "border": "2px solid var(--BV-color-critical-solid)",
              "color": "var(--BV-color-critical-solid)",
            }
          }
          type="button"
        >
          Critical
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "border": "2px solid var(--BV-color-positive-solid)",
              "color": "var(--BV-color-positive-solid)",
            }
          }
          type="button"
        >
          Positive
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "border": "2px solid var(--BV-color-promote-solid)",
              "color": "var(--BV-color-promote-solid)",
            }
          }
          type="button"
        >
          Promote
        </button>
      </div>
    </div>
  </div>,
  <div
    className="mt-3"
  >
    <h3>
      leftIcon
    </h3>
    <div>
      <div
        className="flex flex-row gap-2"
      >
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "border": "2px solid var(--BV-color-neutral-text)",
              "color": "var(--BV-color-neutral-text)",
            }
          }
          type="button"
        >
          <span>
            <svg
              className="w-6 h-6 mr-1  "
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
              />
            </svg>
          </span>
          Neutral
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "border": "2px solid var(--BV-color-secondary-solidText)",
              "color": "var(--BV-color-secondary-solidText)",
            }
          }
          type="button"
        >
          <span>
            <svg
              className="w-6 h-6 mr-1  "
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
              />
            </svg>
          </span>
          Secondary
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "border": "2px solid var(--BV-color-caution-solid)",
              "color": "var(--BV-color-caution-solid)",
            }
          }
          type="button"
        >
          <span>
            <svg
              className="w-6 h-6 mr-1  "
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
              />
            </svg>
          </span>
          Caution
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "border": "2px solid var(--BV-color-critical-solid)",
              "color": "var(--BV-color-critical-solid)",
            }
          }
          type="button"
        >
          <span>
            <svg
              className="w-6 h-6 mr-1  "
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
              />
            </svg>
          </span>
          Critical
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "border": "2px solid var(--BV-color-positive-solid)",
              "color": "var(--BV-color-positive-solid)",
            }
          }
          type="button"
        >
          <span>
            <svg
              className="w-6 h-6 mr-1  "
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
              />
            </svg>
          </span>
          Positive
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "border": "2px solid var(--BV-color-promote-solid)",
              "color": "var(--BV-color-promote-solid)",
            }
          }
          type="button"
        >
          <span>
            <svg
              className="w-6 h-6 mr-1  "
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
              />
            </svg>
          </span>
          Promote
        </button>
      </div>
    </div>
  </div>,
  <div
    className="text-xl font-600 mt-6"
  >
    soft
  </div>,
  <div
    className="flex flex-row gap-2"
  >
    <div>
      <div
        className="flex flex-row gap-2"
      >
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-neutral-borderSubdued)",
              "color": "var(--BV-color-neutral-text)",
            }
          }
          type="button"
        >
          Neutral
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-neutral-borderSubdued)",
              "color": "var(--BV-color-secondary-solidText)",
            }
          }
          type="button"
        >
          Secondary
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-neutral-borderSubdued)",
              "color": "var(--BV-color-caution-solid)",
            }
          }
          type="button"
        >
          Caution
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-neutral-borderSubdued)",
              "color": "var(--BV-color-critical-solid)",
            }
          }
          type="button"
        >
          Critical
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-neutral-borderSubdued)",
              "color": "var(--BV-color-positive-solid)",
            }
          }
          type="button"
        >
          Positive
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-neutral-borderSubdued)",
              "color": "var(--BV-color-promote-solid)",
            }
          }
          type="button"
        >
          Promote
        </button>
      </div>
    </div>
  </div>,
  <div
    className="mt-3"
  >
    <h3>
      disabled
    </h3>
    <div>
      <div
        className="flex flex-row gap-2"
      >
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-not-allowed  "
          disabled={true}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-neutral-textDisabled)",
            }
          }
          type="button"
        >
          Neutral
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-not-allowed  "
          disabled={true}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-neutral-textDisabled)",
            }
          }
          type="button"
        >
          Secondary
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-not-allowed  "
          disabled={true}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-neutral-textDisabled)",
            }
          }
          type="button"
        >
          Caution
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-not-allowed  "
          disabled={true}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-neutral-textDisabled)",
            }
          }
          type="button"
        >
          Critical
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-not-allowed  "
          disabled={true}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-neutral-textDisabled)",
            }
          }
          type="button"
        >
          Positive
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-not-allowed  "
          disabled={true}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-neutral-textDisabled)",
            }
          }
          type="button"
        >
          Promote
        </button>
      </div>
    </div>
  </div>,
  <div
    className="mt-3"
  >
    <h3>
      animate on press disabled
    </h3>
    <div>
      <div
        className="flex flex-row gap-2"
      >
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-colors duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-neutral-borderSubdued)",
              "color": "var(--BV-color-neutral-text)",
            }
          }
          type="button"
        >
          Neutral
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-colors duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-neutral-borderSubdued)",
              "color": "var(--BV-color-secondary-solidText)",
            }
          }
          type="button"
        >
          Secondary
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-colors duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-neutral-borderSubdued)",
              "color": "var(--BV-color-caution-solid)",
            }
          }
          type="button"
        >
          Caution
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-colors duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-neutral-borderSubdued)",
              "color": "var(--BV-color-critical-solid)",
            }
          }
          type="button"
        >
          Critical
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-colors duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-neutral-borderSubdued)",
              "color": "var(--BV-color-positive-solid)",
            }
          }
          type="button"
        >
          Positive
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-colors duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-neutral-borderSubdued)",
              "color": "var(--BV-color-promote-solid)",
            }
          }
          type="button"
        >
          Promote
        </button>
      </div>
    </div>
  </div>,
  <div
    className="mt-3"
  >
    <h3>
      touch
    </h3>
    <div>
      <div
        className="flex flex-row gap-2"
      >
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-neutral-borderSubdued)",
              "color": "var(--BV-color-neutral-text)",
            }
          }
          type="button"
        >
          Neutral
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-neutral-borderSubdued)",
              "color": "var(--BV-color-secondary-solidText)",
            }
          }
          type="button"
        >
          Secondary
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-neutral-borderSubdued)",
              "color": "var(--BV-color-caution-solid)",
            }
          }
          type="button"
        >
          Caution
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-neutral-borderSubdued)",
              "color": "var(--BV-color-critical-solid)",
            }
          }
          type="button"
        >
          Critical
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-neutral-borderSubdued)",
              "color": "var(--BV-color-positive-solid)",
            }
          }
          type="button"
        >
          Positive
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-neutral-borderSubdued)",
              "color": "var(--BV-color-promote-solid)",
            }
          }
          type="button"
        >
          Promote
        </button>
      </div>
    </div>
  </div>,
  <div
    className="mt-3"
  >
    <h3>
      leftIcon
    </h3>
    <div>
      <div
        className="flex flex-row gap-2"
      >
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-neutral-borderSubdued)",
              "color": "var(--BV-color-neutral-text)",
            }
          }
          type="button"
        >
          <span>
            <svg
              className="w-6 h-6 mr-1  "
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
              />
            </svg>
          </span>
          Neutral
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-neutral-borderSubdued)",
              "color": "var(--BV-color-secondary-solidText)",
            }
          }
          type="button"
        >
          <span>
            <svg
              className="w-6 h-6 mr-1  "
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
              />
            </svg>
          </span>
          Secondary
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-neutral-borderSubdued)",
              "color": "var(--BV-color-caution-solid)",
            }
          }
          type="button"
        >
          <span>
            <svg
              className="w-6 h-6 mr-1  "
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
              />
            </svg>
          </span>
          Caution
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-neutral-borderSubdued)",
              "color": "var(--BV-color-critical-solid)",
            }
          }
          type="button"
        >
          <span>
            <svg
              className="w-6 h-6 mr-1  "
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
              />
            </svg>
          </span>
          Critical
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-neutral-borderSubdued)",
              "color": "var(--BV-color-positive-solid)",
            }
          }
          type="button"
        >
          <span>
            <svg
              className="w-6 h-6 mr-1  "
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
              />
            </svg>
          </span>
          Positive
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "var(--BV-color-neutral-borderSubdued)",
              "color": "var(--BV-color-promote-solid)",
            }
          }
          type="button"
        >
          <span>
            <svg
              className="w-6 h-6 mr-1  "
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
              />
            </svg>
          </span>
          Promote
        </button>
      </div>
    </div>
  </div>,
  <div
    className="text-xl font-600 mt-6"
  >
    transparent
  </div>,
  <div
    className="flex flex-row gap-2"
  >
    <div>
      <div
        className="flex flex-row gap-2"
      >
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-neutral-text)",
            }
          }
          type="button"
        >
          Neutral
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-neutral-text)",
            }
          }
          type="button"
        >
          Secondary
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-caution-solid)",
            }
          }
          type="button"
        >
          Caution
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-critical-solid)",
            }
          }
          type="button"
        >
          Critical
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-positive-solid)",
            }
          }
          type="button"
        >
          Positive
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-promote-solid)",
            }
          }
          type="button"
        >
          Promote
        </button>
      </div>
    </div>
  </div>,
  <div
    className="mt-3"
  >
    <h3>
      disabled
    </h3>
    <div>
      <div
        className="flex flex-row gap-2"
      >
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-not-allowed  "
          disabled={true}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-neutral-textDisabled)",
            }
          }
          type="button"
        >
          Neutral
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-not-allowed  "
          disabled={true}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-neutral-textDisabled)",
            }
          }
          type="button"
        >
          Secondary
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-not-allowed  "
          disabled={true}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-neutral-textDisabled)",
            }
          }
          type="button"
        >
          Caution
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-not-allowed  "
          disabled={true}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-neutral-textDisabled)",
            }
          }
          type="button"
        >
          Critical
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-not-allowed  "
          disabled={true}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-neutral-textDisabled)",
            }
          }
          type="button"
        >
          Positive
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-all duration-100 cursor-not-allowed  "
          disabled={true}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-neutral-textDisabled)",
            }
          }
          type="button"
        >
          Promote
        </button>
      </div>
    </div>
  </div>,
  <div
    className="mt-3"
  >
    <h3>
      animate on press disabled
    </h3>
    <div>
      <div
        className="flex flex-row gap-2"
      >
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-colors duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-neutral-text)",
            }
          }
          type="button"
        >
          Neutral
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-colors duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-neutral-text)",
            }
          }
          type="button"
        >
          Secondary
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-colors duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-caution-solid)",
            }
          }
          type="button"
        >
          Caution
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-colors duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-critical-solid)",
            }
          }
          type="button"
        >
          Critical
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-colors duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-positive-solid)",
            }
          }
          type="button"
        >
          Positive
        </button>
        <button
          className="text-md h-10  min-w-10 px-2  select-none inline-flex justify-center items-center rounded-md py-1 transition-colors duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-promote-solid)",
            }
          }
          type="button"
        >
          Promote
        </button>
      </div>
    </div>
  </div>,
  <div
    className="mt-3"
  >
    <h3>
      touch
    </h3>
    <div>
      <div
        className="flex flex-row gap-2"
      >
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-neutral-text)",
            }
          }
          type="button"
        >
          Neutral
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-neutral-text)",
            }
          }
          type="button"
        >
          Secondary
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-caution-solid)",
            }
          }
          type="button"
        >
          Caution
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-critical-solid)",
            }
          }
          type="button"
        >
          Critical
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-positive-solid)",
            }
          }
          type="button"
        >
          Positive
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-promote-solid)",
            }
          }
          type="button"
        >
          Promote
        </button>
      </div>
    </div>
  </div>,
  <div
    className="mt-3"
  >
    <h3>
      leftIcon
    </h3>
    <div>
      <div
        className="flex flex-row gap-2"
      >
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-neutral-text)",
            }
          }
          type="button"
        >
          <span>
            <svg
              className="w-6 h-6 mr-1  "
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
              />
            </svg>
          </span>
          Neutral
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-neutral-text)",
            }
          }
          type="button"
        >
          <span>
            <svg
              className="w-6 h-6 mr-1  "
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
              />
            </svg>
          </span>
          Secondary
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-caution-solid)",
            }
          }
          type="button"
        >
          <span>
            <svg
              className="w-6 h-6 mr-1  "
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
              />
            </svg>
          </span>
          Caution
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-critical-solid)",
            }
          }
          type="button"
        >
          <span>
            <svg
              className="w-6 h-6 mr-1  "
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
              />
            </svg>
          </span>
          Critical
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-positive-solid)",
            }
          }
          type="button"
        >
          <span>
            <svg
              className="w-6 h-6 mr-1  "
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
              />
            </svg>
          </span>
          Positive
        </button>
        <button
          className="text-md h-10  min-w-10 px-3  select-none inline-flex justify-center items-center rounded-md py-2 transition-all duration-100 cursor-pointer "
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            {
              "backgroundColor": "transparent",
              "color": "var(--BV-color-promote-solid)",
            }
          }
          type="button"
        >
          <span>
            <svg
              className="w-6 h-6 mr-1  "
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
              />
            </svg>
          </span>
          Promote
        </button>
      </div>
    </div>
  </div>,
]
`;

exports[`Storyshots ui-components/ComboBox Disabled Case 1`] = `
<div
  className="B-ui-components_combo-box flex flex-col relative w-56 "
>
  <label
    className="block select-none text-sm font-medium text-left"
    htmlFor="react-aria-test-generated-id"
    id="react-aria-test-generated-id"
    style={
      {
        "color": "var(--BV-text-color-1)",
      }
    }
  >
    ComboBox
  </label>
  <div
    className="B-ui-components_combo-box-input-wrapper relative inline-flex flex-row rounded-md overflow-hidden "
  >
    <input
      aria-autocomplete="list"
      aria-expanded={false}
      aria-labelledby="react-aria-test-generated-id"
      autoComplete="off"
      autoCorrect="off"
      className="w-full outline-none px-3 py-1 bg-inherit "
      disabled={false}
      id="react-aria-test-generated-id"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onTouchEnd={[Function]}
      readOnly={false}
      role="combobox"
      spellCheck="false"
      type="text"
      value=""
    />
    <button
      aria-controls={null}
      aria-expanded={false}
      aria-haspopup="listbox"
      aria-label="Show suggestions"
      aria-labelledby="react-aria-test-generated-id"
      className="px-1 cursor-pointer"
      id="react-aria-test-generated-id"
      onBlur={null}
      onClick={[Function]}
      onDragStart={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      onTouchCancel={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      tabIndex={-1}
      type="button"
    >
      <svg
        aria-hidden="true"
        className="w-5 h-5"
        fill="currentColor"
        style={
          {
            "color": "var(--BV-ui-bangle-button-color)",
          }
        }
        viewBox="0 0 20 20"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          clipRule="evenodd"
          d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
          fillRule="evenodd"
        />
      </svg>
    </button>
  </div>
</div>
`;

exports[`Storyshots ui-components/ComboBox Primary 1`] = `
<div
  className="B-ui-components_combo-box flex flex-col relative w-56 "
>
  <label
    className="block select-none text-sm font-medium text-left"
    htmlFor="react-aria-test-generated-id"
    id="react-aria-test-generated-id"
    style={
      {
        "color": "var(--BV-text-color-1)",
      }
    }
  >
    ComboBox
  </label>
  <div
    className="B-ui-components_combo-box-input-wrapper relative inline-flex flex-row rounded-md overflow-hidden "
  >
    <input
      aria-autocomplete="list"
      aria-expanded={false}
      aria-labelledby="react-aria-test-generated-id"
      autoComplete="off"
      autoCorrect="off"
      className="w-full outline-none px-3 py-1 bg-inherit "
      disabled={false}
      id="react-aria-test-generated-id"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onTouchEnd={[Function]}
      readOnly={false}
      role="combobox"
      spellCheck="false"
      type="text"
      value=""
    />
    <button
      aria-controls={null}
      aria-expanded={false}
      aria-haspopup="listbox"
      aria-label="Show suggestions"
      aria-labelledby="react-aria-test-generated-id"
      className="px-1 cursor-pointer"
      id="react-aria-test-generated-id"
      onBlur={null}
      onClick={[Function]}
      onDragStart={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      onTouchCancel={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      tabIndex={-1}
      type="button"
    >
      <svg
        aria-hidden="true"
        className="w-5 h-5"
        fill="currentColor"
        style={
          {
            "color": "var(--BV-ui-bangle-button-color)",
          }
        }
        viewBox="0 0 20 20"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          clipRule="evenodd"
          d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
          fillRule="evenodd"
        />
      </svg>
    </button>
  </div>
</div>
`;

exports[`Storyshots ui-components/Dialog Destructive 1`] = `
<div>
  <button
    aria-label="open"
    className="B-ui-bangle-button_button p-1  transition-all duration-100 "
    onBlur={[Function]}
    onClick={[Function]}
    onDragStart={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchCancel={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    style={
      {
        "backgroundColor": "var(--BV-ui-bangle-button-bg-color)",
        "color": "var(--BV-ui-bangle-button-color)",
      }
    }
    type="button"
  >
    <span
      className=""
    >
      Open modal
    </span>
  </button>
  <div
    aria-hidden={null}
    data-overlay-container={true}
  />
</div>
`;

exports[`Storyshots ui-components/Dialog Loading Dialog 1`] = `
<div>
  <button
    aria-label="open"
    className="B-ui-bangle-button_button p-1  transition-all duration-100 "
    onBlur={[Function]}
    onClick={[Function]}
    onDragStart={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchCancel={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    style={
      {
        "backgroundColor": "var(--BV-ui-bangle-button-bg-color)",
        "color": "var(--BV-ui-bangle-button-color)",
      }
    }
    type="button"
  >
    <span
      className=""
    >
      Open modal
    </span>
  </button>
  <div
    aria-hidden={null}
    data-overlay-container={true}
  />
</div>
`;

exports[`Storyshots ui-components/Dialog Scrollable Parent 1`] = `
<div
  style={
    {
      "maxWidth": 300,
    }
  }
>
  <div>
    Lorem ipsum, dolor sit amet consectetur adipisicing elit. Sint, corporis libero? Consequuntur veniam perferendis soluta odit rem esse earum repellat officiis cum recusandae, quas facilis eos ad rerum quibusdam eligendi.
  </div>
  <div>
    Lorem ipsum, dolor sit amet consectetur adipisicing elit. Sint, corporis libero? Consequuntur veniam perferendis soluta odit rem esse earum repellat officiis cum recusandae, quas facilis eos ad rerum quibusdam eligendi.
  </div>
  <div>
    Lorem ipsum, dolor sit amet consectetur adipisicing elit. Sint, corporis libero? Consequuntur veniam perferendis soluta odit rem esse earum repellat officiis cum recusandae, quas facilis eos ad rerum quibusdam eligendi.
  </div>
  <div>
    Lorem ipsum, dolor sit amet consectetur adipisicing elit. Sint, corporis libero? Consequuntur veniam perferendis soluta odit rem esse earum repellat officiis cum recusandae, quas facilis eos ad rerum quibusdam eligendi.
  </div>
  <button
    aria-label="open"
    className="B-ui-bangle-button_button p-1  transition-all duration-100 "
    onBlur={[Function]}
    onClick={[Function]}
    onDragStart={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchCancel={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    style={
      {
        "backgroundColor": "var(--BV-ui-bangle-button-bg-color)",
        "color": "var(--BV-ui-bangle-button-color)",
      }
    }
    type="button"
  >
    <span
      className=""
    >
      Open modal
    </span>
  </button>
  <div>
    Lorem ipsum, dolor sit amet consectetur adipisicing elit. Sint, corporis libero? Consequuntur veniam perferendis soluta odit rem esse earum repellat officiis cum recusandae, quas facilis eos ad rerum quibusdam eligendi.
  </div>
  <div>
    Lorem ipsum, dolor sit amet consectetur adipisicing elit. Sint, corporis libero? Consequuntur veniam perferendis soluta odit rem esse earum repellat officiis cum recusandae, quas facilis eos ad rerum quibusdam eligendi.
  </div>
  <div>
    Lorem ipsum, dolor sit amet consectetur adipisicing elit. Sint, corporis libero? Consequuntur veniam perferendis soluta odit rem esse earum repellat officiis cum recusandae, quas facilis eos ad rerum quibusdam eligendi.
  </div>
  <div
    aria-hidden={null}
    data-overlay-container={true}
    style={
      {
        "zIndex": "var(--BV-window-modal-z-index)",
      }
    }
  />
</div>
`;

exports[`Storyshots ui-components/Dialog Simple Submit 1`] = `
<div>
  <button
    aria-label="open"
    className="B-ui-bangle-button_button p-1  transition-all duration-100 "
    onBlur={[Function]}
    onClick={[Function]}
    onDragStart={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchCancel={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    style={
      {
        "backgroundColor": "var(--BV-ui-bangle-button-bg-color)",
        "color": "var(--BV-ui-bangle-button-color)",
      }
    }
    type="button"
  >
    <span
      className=""
    >
      Open modal
    </span>
  </button>
  <div
    aria-hidden={null}
    data-overlay-container={true}
  />
</div>
`;

exports[`Storyshots ui-components/ErrorBanner Primary 1`] = `
<div
  className="m-3 p-4 rounded"
  data-testid=""
  style={
    {
      "backgroundColor": "var(--BV-error-bg-color)",
      "color": "var(--BV-error-color)",
    }
  }
>
  <div
    className="font-semibold text-lg text-left"
  >
    Error
  </div>
  <div
    className="text-left font-light mt-2"
  >
    There was an error
  </div>
</div>
`;

exports[`Storyshots ui-components/Input Primary 1`] = `
<div
  className="B-ui-components_input-container"
>
  <input
    autoCapitalize="off"
    autoCorrect="off"
    className="B-ui-components_input "
    onBlur={[Function]}
    onFocus={[Function]}
    type="text"
  />
  <div
    style={
      {
        "display": "flex",
        "position": "relative",
      }
    }
  />
</div>
`;

exports[`Storyshots ui-components/LocationBreadCrumb Primary 1`] = `
<div
  className="z-10 w-full py-1 pl-2"
>
  <span>
    hi
  </span>
  <span
    className="px-1"
  >
    &gt;
  </span>
  <span>
    brothers
  </span>
</div>
`;

exports[`Storyshots ui-components/Select Basic Example 1`] = `
<div
  className="inline-flex flex-col relative mt-4 w-56 "
>
  <div
    className="B-ui-components_select-label text-sm font-medium cursor-default"
    id="react-aria-test-generated-id"
    onClick={[Function]}
  >
    Favorite Animal
  </div>
  <div
    aria-hidden={true}
    onBlur={null}
    onFocus={null}
    style={
      {
        "border": 0,
        "clip": "rect(0 0 0 0)",
        "clipPath": "inset(50%)",
        "height": 1,
        "margin": "0 -1px -1px 0",
        "overflow": "hidden",
        "padding": 0,
        "position": "absolute",
        "whiteSpace": "nowrap",
        "width": 1,
      }
    }
  >
    <input
      onFocus={[Function]}
      style={
        {
          "fontSize": 16,
        }
      }
      tabIndex={-1}
      type="text"
    />
    <label>
      Favorite Animal
      <select
        onChange={[Function]}
        size={6}
        tabIndex={-1}
        value=""
      >
        <option />
        <option
          value="red panda"
        >
          red
        </option>
        <option
          value="cat"
        >
          cat
        </option>
        <option
          value="dog"
        >
          dog
        </option>
        <option
          value="aardvark"
        >
          aardvark
        </option>
        <option
          value="kangaroo"
        >
          kangaroo
        </option>
        <option
          value="snake"
        >
          snake
        </option>
      </select>
    </label>
  </div>
  <button
    aria-controls={null}
    aria-expanded={false}
    aria-haspopup="listbox"
    aria-labelledby="react-aria-test-generated-id react-aria-test-generated-id"
    className="B-ui-components_select-button p-1 relative inline-flex flex-row items-center justify-between overflow-hidden cursor-default shadow-sm outline-none "
    id="react-aria-test-generated-id"
    onBlur={[Function]}
    onClick={[Function]}
    onDragStart={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchCancel={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    style={
      {
        "backgroundColor": "var(--BV-ui-bangle-button-bg-color)",
        "borderRadius": "var(--BV-ui-bangle-button-radius)",
      }
    }
    type="button"
  >
    <span
      className="text-md text-left px-1 w-64 truncate overflow-ellipsis "
      id="react-aria-test-generated-id"
      style={
        {
          "color": "var(--BV-ui-bangle-button-color)",
        }
      }
    >
      Select an option
    </span>
    <svg
      aria-hidden="true"
      className="w-5 h-5"
      fill="currentColor"
      style={
        {
          "color": "var(--BV-ui-bangle-button-color)",
        }
      }
      viewBox="0 0 20 20"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        clipRule="evenodd"
        d="M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z"
        fillRule="evenodd"
      />
    </svg>
  </button>
</div>
`;

exports[`Storyshots ui-components/Select Controlled State 1`] = `
<div
  className="inline-flex flex-col relative mt-4 w-56 "
>
  <div
    className="B-ui-components_select-label text-sm font-medium cursor-default"
    id="react-aria-test-generated-id"
    onClick={[Function]}
  >
    Favorite Animal
  </div>
  <div
    aria-hidden={true}
    onBlur={null}
    onFocus={null}
    style={
      {
        "border": 0,
        "clip": "rect(0 0 0 0)",
        "clipPath": "inset(50%)",
        "height": 1,
        "margin": "0 -1px -1px 0",
        "overflow": "hidden",
        "padding": 0,
        "position": "absolute",
        "whiteSpace": "nowrap",
        "width": 1,
      }
    }
  >
    <input
      onFocus={[Function]}
      style={
        {
          "fontSize": 16,
        }
      }
      tabIndex={-1}
      type="text"
    />
    <label>
      Favorite Animal
      <select
        onChange={[Function]}
        size={6}
        tabIndex={-1}
        value=""
      >
        <option />
        <option
          value="red panda"
        >
          red
        </option>
        <option
          value="cat"
        >
          cat
        </option>
        <option
          value="dog"
        >
          dog
        </option>
        <option
          value="aardvark"
        >
          aardvark
        </option>
        <option
          value="kangaroo"
        >
          kangaroo
        </option>
        <option
          value="snake"
        >
          snake
        </option>
      </select>
    </label>
  </div>
  <button
    aria-controls={null}
    aria-expanded={false}
    aria-haspopup="listbox"
    aria-labelledby="react-aria-test-generated-id react-aria-test-generated-id"
    className="B-ui-components_select-button p-1 relative inline-flex flex-row items-center justify-between overflow-hidden cursor-default shadow-sm outline-none "
    id="react-aria-test-generated-id"
    onBlur={[Function]}
    onClick={[Function]}
    onDragStart={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchCancel={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    style={
      {
        "backgroundColor": "var(--BV-ui-bangle-button-bg-color)",
        "borderRadius": "var(--BV-ui-bangle-button-radius)",
      }
    }
    type="button"
  >
    <span
      className="text-md text-left px-1 w-64 truncate overflow-ellipsis "
      id="react-aria-test-generated-id"
      style={
        {
          "color": "var(--BV-ui-bangle-button-color)",
        }
      }
    >
      Select an option
    </span>
    <svg
      aria-hidden="true"
      className="w-5 h-5"
      fill="currentColor"
      style={
        {
          "color": "var(--BV-ui-bangle-button-color)",
        }
      }
      viewBox="0 0 20 20"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        clipRule="evenodd"
        d="M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z"
        fillRule="evenodd"
      />
    </svg>
  </button>
</div>
`;

exports[`Storyshots ui-components/Select Disabled Keys 1`] = `
<div
  className="inline-flex flex-col relative mt-4 w-56 "
>
  <div
    className="B-ui-components_select-label text-sm font-medium cursor-default"
    id="react-aria-test-generated-id"
    onClick={[Function]}
  >
    Favorite Animal
  </div>
  <div
    aria-hidden={true}
    onBlur={null}
    onFocus={null}
    style={
      {
        "border": 0,
        "clip": "rect(0 0 0 0)",
        "clipPath": "inset(50%)",
        "height": 1,
        "margin": "0 -1px -1px 0",
        "overflow": "hidden",
        "padding": 0,
        "position": "absolute",
        "whiteSpace": "nowrap",
        "width": 1,
      }
    }
  >
    <input
      onFocus={[Function]}
      style={
        {
          "fontSize": 16,
        }
      }
      tabIndex={-1}
      type="text"
    />
    <label>
      Favorite Animal
      <select
        onChange={[Function]}
        size={6}
        tabIndex={-1}
        value=""
      >
        <option />
        <option
          value="red panda"
        >
          red
        </option>
        <option
          value="cat"
        >
          cat
        </option>
        <option
          value="dog"
        >
          dog
        </option>
        <option
          value="aardvark"
        >
          aardvark
        </option>
        <option
          value="kangaroo"
        >
          kangaroo
        </option>
        <option
          value="snake"
        >
          snake
        </option>
      </select>
    </label>
  </div>
  <button
    aria-controls={null}
    aria-expanded={false}
    aria-haspopup="listbox"
    aria-labelledby="react-aria-test-generated-id react-aria-test-generated-id"
    className="B-ui-components_select-button p-1 relative inline-flex flex-row items-center justify-between overflow-hidden cursor-default shadow-sm outline-none "
    id="react-aria-test-generated-id"
    onBlur={[Function]}
    onClick={[Function]}
    onDragStart={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchCancel={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    style={
      {
        "backgroundColor": "var(--BV-ui-bangle-button-bg-color)",
        "borderRadius": "var(--BV-ui-bangle-button-radius)",
      }
    }
    type="button"
  >
    <span
      className="text-md text-left px-1 w-64 truncate overflow-ellipsis "
      id="react-aria-test-generated-id"
      style={
        {
          "color": "var(--BV-ui-bangle-button-color)",
        }
      }
    >
      Select an option
    </span>
    <svg
      aria-hidden="true"
      className="w-5 h-5"
      fill="currentColor"
      style={
        {
          "color": "var(--BV-ui-bangle-button-color)",
        }
      }
      viewBox="0 0 20 20"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        clipRule="evenodd"
        d="M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z"
        fillRule="evenodd"
      />
    </svg>
  </button>
</div>
`;

exports[`Storyshots ui-components/Select Section Example 1`] = `
<div
  className="inline-flex flex-col relative mt-4 w-56 "
>
  <div
    className="B-ui-components_select-label text-sm font-medium cursor-default"
    id="react-aria-test-generated-id"
    onClick={[Function]}
  >
    Companies
  </div>
  <div
    aria-hidden={true}
    onBlur={null}
    onFocus={null}
    style={
      {
        "border": 0,
        "clip": "rect(0 0 0 0)",
        "clipPath": "inset(50%)",
        "height": 1,
        "margin": "0 -1px -1px 0",
        "overflow": "hidden",
        "padding": 0,
        "position": "absolute",
        "whiteSpace": "nowrap",
        "width": 1,
      }
    }
  >
    <input
      onFocus={[Function]}
      style={
        {
          "fontSize": 16,
        }
      }
      tabIndex={-1}
      type="text"
    />
    <label>
      Companies
      <select
        onChange={[Function]}
        size={12}
        tabIndex={-1}
        value=""
      >
        <option />
        <option
          value="Chatterbridge"
        >
          Chatterbridge
        </option>
        <option
          value="tagchat"
        >
          tagchat
        </option>
        <option
          value="$.0.2"
        >
          Yambee
        </option>
        <option
          value="$.0.3"
        >
          Photobug
        </option>
        <option
          value="$.0.4"
        >
          Livepath
        </option>
        <option
          value="$.1.0"
        >
          Theodor
        </option>
        <option
          value="$.1.1"
        >
          Dwight
        </option>
        <option
          value="$.1.2"
        >
          Maddalena
        </option>
        <option
          value="$.1.3"
        >
          Maureen
        </option>
        <option
          value="$.1.4"
        >
          Abbie
        </option>
      </select>
    </label>
  </div>
  <button
    aria-controls={null}
    aria-expanded={false}
    aria-haspopup="listbox"
    aria-labelledby="react-aria-test-generated-id react-aria-test-generated-id"
    className="B-ui-components_select-button p-1 relative inline-flex flex-row items-center justify-between overflow-hidden cursor-default shadow-sm outline-none "
    id="react-aria-test-generated-id"
    onBlur={[Function]}
    onClick={[Function]}
    onDragStart={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchCancel={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    style={
      {
        "backgroundColor": "var(--BV-ui-bangle-button-bg-color)",
        "borderRadius": "var(--BV-ui-bangle-button-radius)",
      }
    }
    type="button"
  >
    <span
      className="text-md text-left px-1 w-64 truncate overflow-ellipsis "
      id="react-aria-test-generated-id"
      style={
        {
          "color": "var(--BV-ui-bangle-button-color)",
        }
      }
    >
      Select an option
    </span>
    <svg
      aria-hidden="true"
      className="w-5 h-5"
      fill="currentColor"
      style={
        {
          "color": "var(--BV-ui-bangle-button-color)",
        }
      }
      viewBox="0 0 20 20"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        clipRule="evenodd"
        d="M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z"
        fillRule="evenodd"
      />
    </svg>
  </button>
</div>
`;

exports[`Storyshots ui-components/TextField Case 2 1`] = `
<div
  className=""
  style={
    {
      "display": "flex",
      "flexDirection": "column",
    }
  }
>
  <label
    className="text-sm"
    htmlFor="react-aria-test-generated-id"
    id="react-aria-test-generated-id"
    style={
      {
        "color": "var(--BV-text-color-1)",
      }
    }
  >
    Email
  </label>
  <input
    aria-labelledby="react-aria-test-generated-id"
    className="outline-none"
    disabled={false}
    id="react-aria-test-generated-id"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="abc@example.com"
    readOnly={false}
    spellCheck={true}
    style={
      {
        "backgroundColor": "var(--BV-window-bg-color-0)",
        "border": "1px solid var(--BV-window-border-color-0)",
        "borderRadius": "0.125rem",
        "color": "var(--BV-text-color-0)",
        "outlineOffset": 2,
        "padding": "0.5rem 0.75rem",
      }
    }
    type="text"
  />
  <div
    className="text-sm"
    style={
      {
        "color": "var(--BV-text-color-1)",
      }
    }
  >
    Enter an email for us to contact you about your order.
  </div>
</div>
`;

exports[`Storyshots ui-components/TextField Primary 1`] = `
<div
  className=""
  style={
    {
      "display": "flex",
      "flexDirection": "column",
    }
  }
>
  <label
    className="text-sm"
    htmlFor="react-aria-test-generated-id"
    id="react-aria-test-generated-id"
    style={
      {
        "color": "var(--BV-text-color-1)",
      }
    }
  >
    I am label
  </label>
  <input
    aria-labelledby="react-aria-test-generated-id"
    className="outline-none"
    disabled={false}
    id="react-aria-test-generated-id"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    readOnly={false}
    spellCheck={true}
    style={
      {
        "backgroundColor": "var(--BV-window-bg-color-0)",
        "border": "1px solid var(--BV-window-border-color-0)",
        "borderRadius": "0.125rem",
        "color": "var(--BV-text-color-0)",
        "outlineOffset": 2,
        "padding": "0.5rem 0.75rem",
      }
    }
    type="text"
  />
  <div
    className="text-sm"
    style={
      {
        "color": "var(--BV-severity-error-color)",
      }
    }
  >
    errored
  </div>
</div>
`;

exports[`Storyshots ui-dhancha/Dhancha Mobile 1`] = `
<div
  className="B-ui-dhancha_container"
>
  <div
    aria-label="Activity Bar"
    className="B-ui-dhancha_activitybar"
    role="navigation"
  >
    <span>
       Heading
    </span>
    <span>
       Bar
    </span>
  </div>
  <div
    onClick={[Function]}
    style={
      {
        "backgroundColor": "lightgreen",
      }
    }
  >
    <div>
      <div>
        <div
          style={
            {
              "marginTop": "1rem",
            }
          }
        >
          Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
        </div>
        <div
          style={
            {
              "marginTop": "1rem",
            }
          }
        >
          Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
        </div>
        <div
          style={
            {
              "marginTop": "1rem",
            }
          }
        >
          Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
        </div>
        <div
          style={
            {
              "marginTop": "1rem",
            }
          }
        >
          Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
        </div>
        <div
          style={
            {
              "marginTop": "1rem",
            }
          }
        >
          Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
        </div>
        <div
          style={
            {
              "marginTop": "1rem",
            }
          }
        >
          Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
        </div>
        <div
          style={
            {
              "marginTop": "1rem",
            }
          }
        >
          Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
        </div>
        <div
          style={
            {
              "marginTop": "1rem",
            }
          }
        >
          Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
        </div>
        <div
          style={
            {
              "marginTop": "1rem",
            }
          }
        >
          Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
        </div>
        <div
          style={
            {
              "marginTop": "1rem",
            }
          }
        >
          Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots ui-dhancha/Dhancha Primary 1`] = `
<div
  className="B-ui-dhancha_container BU_widescreen"
>
  <div
    aria-label="Activity Bar"
    className="B-ui-dhancha_activitybar BU_widescreen"
    role="navigation"
  >
    <span>
       H
    </span>
    <span>
       B
    </span>
  </div>
  <header
    className="B-ui-dhancha_ws-sidebar"
  >
    <div
      style={
        {
          "backgroundColor": "lightgreen",
          "height": "100vh",
          "overflowY": "scroll",
        }
      }
    />
  </header>
  <main
    className="B-ui-dhancha_main-content BU_widescreen"
  >
    <div
      style={
        {
          "backgroundColor": "pink",
          "height": "100%",
          "overflowY": "scroll",
        }
      }
    >
      <div>
        Main content
        <button
          onClick={[Function]}
        >
          Note Sidebar
        </button>
        <button
          onClick={[Function]}
        >
          Workspace Sidebar
        </button>
        <div>
          <div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
            <div
              style={
                {
                  "marginTop": "1rem",
                }
              }
            >
              Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      style={
        {
          "backgroundColor": "pink",
          "height": "100%",
          "overflowY": "scroll",
        }
      }
    >
      <div>
        Main content
        <button
          onClick={[Function]}
        >
          Note Sidebar
        </button>
        <button
          onClick={[Function]}
        >
          Workspace Sidebar
        </button>
      </div>
      <div>
        <div>
          <div
            style={
              {
                "marginTop": "1rem",
              }
            }
          >
            Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
          </div>
        </div>
      </div>
    </div>
  </main>
  <aside
    className="B-ui-dhancha_note-sidebar"
  >
    <div
      style={
        {
          "backgroundColor": "lightblue",
          "height": "100vh",
          "overflowY": "scroll",
        }
      }
    >
      <div>
        Note sidebar
      </div>
      <div>
        <div>
          <div
            style={
              {
                "marginTop": "1rem",
              }
            }
          >
            Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
          </div>
          <div
            style={
              {
                "marginTop": "1rem",
              }
            }
          >
            Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
          </div>
          <div
            style={
              {
                "marginTop": "1rem",
              }
            }
          >
            Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
          </div>
          <div
            style={
              {
                "marginTop": "1rem",
              }
            }
          >
            Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
          </div>
          <div
            style={
              {
                "marginTop": "1rem",
              }
            }
          >
            Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
          </div>
          <div
            style={
              {
                "marginTop": "1rem",
              }
            }
          >
            Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
          </div>
          <div
            style={
              {
                "marginTop": "1rem",
              }
            }
          >
            Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
          </div>
          <div
            style={
              {
                "marginTop": "1rem",
              }
            }
          >
            Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
          </div>
          <div
            style={
              {
                "marginTop": "1rem",
              }
            }
          >
            Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
          </div>
          <div
            style={
              {
                "marginTop": "1rem",
              }
            }
          >
            Tabbed UI Premise: make it clear which file I am working on and improve the top level ogranization of the app. I think it is time to just create a master UI skeleton that I can try out independently and progressively enhance it for the user. Again prone to the itch of creation, I need to think about what skeleton will work best for me. MemUI, logSeq and many more in my notes, have decent UI , I just need to capture it. Dhancha the main skeleton of the app. headerSection mainSection primaryColumn sidebar Notes nThis will be a good exercise to break up things in app directory, keep the in mind good article on css styling https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/ also do some research on styling.
          </div>
        </div>
      </div>
    </div>
  </aside>
</div>
`;
