import path from 'path';
import prettier from 'prettier';

import { YarnWorkspaceHelpers } from '@bangle.io/yarn-workspace-helpers';

import { ROOT_DIR_PATH } from './config';

export async function generateStyleLintRegex(
  ws = new YarnWorkspaceHelpers({ rootDir: ROOT_DIR_PATH }),
) {
  const rootPkg = ws.getPackage('bangle-io');
  const fileHelper = await rootPkg?.getFileHelper(
    path.join(rootPkg?.packagePath, '/.stylelintrc.json'),
  );

  if (!fileHelper) {
    throw new Error('Could not find file helper');
  }

  const result: string[] = [];
  await ws.forEachPackage(async (pkg) => {
    if (
      (await pkg.hasCSSFiles()) &&
      !pkg.isWorktree &&
      !pkg.isToolingWorkspace
    ) {
      result.push(pkg.name);
    }
  });

  await fileHelper.modify((content) => {
    const styleLint = JSON.parse(content);

    let regexBuild = result
      .flatMap((r) => r)
      .map((r) => 'B-' + r.split('@bangle.io/')[1]);

    regexBuild.push('BU');

    regexBuild.sort();

    let folders = regexBuild;
    styleLint.rules['selector-class-pattern'] = [
      `^(${folders.join('|')})_[a-z0-9A-Z\\-]+$`,
      {
        message:
          'Selector should start with the package name followed by an underscore and then the selector name containing only lowercase letters, numbers and hyphens.',
      },
    ];

    styleLint['!!NOTE!!'] =
      'Parts of this file are autogenerated by the tooling/_scripts, run "yarn g:css:stylelint-update-regex" to update.';

    console.log('generateStyleLintRegex: success');

    return prettier.format(JSON.stringify(styleLint), {
      parser: 'json',
    });
  });
}

if (require.main === module) {
  generateStyleLintRegex();
}
