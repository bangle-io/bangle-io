// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`store basic tests destroys 1`] = `
{
  "_actionSerializers": {},
  "_currentRunId": 0,
  "_deferredRunner": undefined,
  "_destroyController": Any<AbortController>,
  "_destroyed": true,
  "_disableSideEffects": false,
  "_dispatchAction": [Function],
  "_infiniteErrors": {
    "count": 0,
    "lastSeen": 0,
  },
  "_lastSeenStateCache": WeakMap {},
  "_onError": [Function],
  "_scheduler": undefined,
  "_sideEffects": [],
  "_state": AppState {
    "config": AppStateConfig {
      "fields": [
        FieldDesc {
          "apply": [Function],
          "init": [Function],
          "name": "one$",
        },
        FieldDesc {
          "apply": [Function],
          "init": [Function],
          "name": "two$",
        },
      ],
      "opts": undefined,
      "slices": [
        Slice {
          "key": "one$",
          "spec": {
            "key": SliceKey {
              "key": "one$",
              "name": "one",
            },
            "state": {
              "apply": [Function],
              "init": [Function],
            },
          },
        },
        Slice {
          "key": "two$",
          "spec": {
            "key": SliceKey {
              "key": "two$",
              "name": "two",
            },
            "state": {
              "apply": [Function],
              "init": [Function],
            },
          },
        },
      ],
      "slicesByKey": {
        "one$": Slice {
          "key": "one$",
          "spec": {
            "key": SliceKey {
              "key": "one$",
              "name": "one",
            },
            "state": {
              "apply": [Function],
              "init": [Function],
            },
          },
        },
        "two$": Slice {
          "key": "two$",
          "spec": {
            "key": SliceKey {
              "key": "two$",
              "name": "two",
            },
            "state": {
              "apply": [Function],
              "init": [Function],
            },
          },
        },
      },
    },
    "slicesCurrentState": {
      "one$": 1,
      "two$": 2,
    },
  },
  "dispatch": [Function],
  "errorHandler": [Function],
  "storeName": "test-store",
}
`;

exports[`store basic tests sets up properly 1`] = `
{
  "_actionSerializers": {},
  "_currentRunId": 0,
  "_deferredRunner": undefined,
  "_destroyController": Any<AbortController>,
  "_destroyed": false,
  "_disableSideEffects": false,
  "_dispatchAction": [Function],
  "_infiniteErrors": {
    "count": 0,
    "lastSeen": 0,
  },
  "_lastSeenStateCache": WeakMap {},
  "_onError": [Function],
  "_scheduler": undefined,
  "_sideEffects": [],
  "_state": AppState {
    "config": AppStateConfig {
      "fields": [
        FieldDesc {
          "apply": [Function],
          "init": [Function],
          "name": "one$",
        },
        FieldDesc {
          "apply": [Function],
          "init": [Function],
          "name": "two$",
        },
      ],
      "opts": undefined,
      "slices": [
        Slice {
          "key": "one$",
          "spec": {
            "key": SliceKey {
              "key": "one$",
              "name": "one",
            },
            "state": {
              "apply": [Function],
              "init": [Function],
            },
          },
        },
        Slice {
          "key": "two$",
          "spec": {
            "key": SliceKey {
              "key": "two$",
              "name": "two",
            },
            "state": {
              "apply": [Function],
              "init": [Function],
            },
          },
        },
      ],
      "slicesByKey": {
        "one$": Slice {
          "key": "one$",
          "spec": {
            "key": SliceKey {
              "key": "one$",
              "name": "one",
            },
            "state": {
              "apply": [Function],
              "init": [Function],
            },
          },
        },
        "two$": Slice {
          "key": "two$",
          "spec": {
            "key": SliceKey {
              "key": "two$",
              "name": "two",
            },
            "state": {
              "apply": [Function],
              "init": [Function],
            },
          },
        },
      },
    },
    "slicesCurrentState": {
      "one$": 1,
      "two$": 2,
    },
  },
  "dispatch": [Function],
  "errorHandler": [Function],
  "storeName": "test-store",
}
`;

exports[`store deferred side effects does not call deferred update when scheduler is not provided 1`] = `
{
  "_actionSerializers": {},
  "_currentRunId": 0,
  "_deferredRunner": undefined,
  "_destroyController": Any<AbortController>,
  "_destroyed": false,
  "_disableSideEffects": false,
  "_dispatchAction": [Function],
  "_infiniteErrors": {
    "count": 0,
    "lastSeen": 0,
  },
  "_lastSeenStateCache": WeakMap {},
  "_onError": [Function],
  "_scheduler": [Function],
  "_sideEffects": [
    {
      "effect": {
        "deferredUpdate": [MockFunction],
      },
      "initialState": AppState {
        "config": AppStateConfig {
          "fields": [],
          "opts": undefined,
          "slices": [
            Slice {
              "key": "slice$2",
              "spec": {
                "sideEffect": [MockFunction] {
                  "calls": [
                    [
                      [Circular],
                      undefined,
                    ],
                  ],
                  "results": [
                    {
                      "type": "return",
                      "value": {
                        "deferredUpdate": [MockFunction],
                      },
                    },
                  ],
                },
              },
            },
          ],
          "slicesByKey": {
            "slice$2": Slice {
              "key": "slice$2",
              "spec": {
                "sideEffect": [MockFunction] {
                  "calls": [
                    [
                      [Circular],
                      undefined,
                    ],
                  ],
                  "results": [
                    {
                      "type": "return",
                      "value": {
                        "deferredUpdate": [MockFunction],
                      },
                    },
                  ],
                },
              },
            },
          },
        },
        "slicesCurrentState": {},
      },
      "key": "slice$2",
    },
  ],
  "_state": AppState {
    "config": AppStateConfig {
      "fields": [],
      "opts": undefined,
      "slices": [
        Slice {
          "key": "slice$2",
          "spec": {
            "sideEffect": [MockFunction] {
              "calls": [
                [
                  [Circular],
                  undefined,
                ],
              ],
              "results": [
                {
                  "type": "return",
                  "value": {
                    "deferredUpdate": [MockFunction],
                  },
                },
              ],
            },
          },
        },
      ],
      "slicesByKey": {
        "slice$2": Slice {
          "key": "slice$2",
          "spec": {
            "sideEffect": [MockFunction] {
              "calls": [
                [
                  [Circular],
                  undefined,
                ],
              ],
              "results": [
                {
                  "type": "return",
                  "value": {
                    "deferredUpdate": [MockFunction],
                  },
                },
              ],
            },
          },
        },
      },
    },
    "slicesCurrentState": {},
  },
  "dispatch": [Function],
  "errorHandler": [Function],
  "storeName": "test-store",
}
`;

exports[`store empty store 1`] = `
{
  "_actionSerializers": {},
  "_currentRunId": 0,
  "_deferredRunner": undefined,
  "_destroyController": Any<AbortController>,
  "_destroyed": false,
  "_disableSideEffects": false,
  "_dispatchAction": [Function],
  "_infiniteErrors": {
    "count": 0,
    "lastSeen": 0,
  },
  "_lastSeenStateCache": WeakMap {},
  "_onError": [Function],
  "_scheduler": undefined,
  "_sideEffects": [],
  "_state": AppState {
    "config": AppStateConfig {
      "fields": [],
      "opts": undefined,
      "slices": [],
      "slicesByKey": {},
    },
    "slicesCurrentState": {},
  },
  "dispatch": [Function],
  "errorHandler": [Function],
  "storeName": "test-store",
}
`;
